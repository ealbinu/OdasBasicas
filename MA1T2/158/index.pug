include ../../assets/pug/_head
include ../../assets/pug/_scripts

- title = 'Cuento hasta 100'
- subtitle = 'Hasta 100 / Tablero de 100'

<!DOCTYPE html>
html(lang="es")
    +head
        style.
            .boxes {
                display: flex;
                justify-content: center;
            }
            .boxes .selectable {
                flex-direction: column;
            }
            .boxes .selectable .box {
                width: 16px;
                height: 16px;
                border: 1px solid #fff;
                background: var(--clear);
                border-radius: 4px;
            }
            .boxes .selectable:hover:not(.dis) {
                cursor: pointer;
            }
            .boxes .selectable:hover:not(.dis) .box {
                background: var(--main);
            }
            .boxes .selectable.on .circledactive {
                display: none;
            }
            .boxes .selectable.on .box {
                background: var(--main);
            }
            .boxes .selectable.on.first .box {
                background: var(--accent);
            }

            .ex1 {
                background: #f5f5f5;
                padding: 10px;
                border-radius: 10px;
            }
            .ex1 .numbers {
                font-size: 2rem;
            }
            .ex1 .inputbox {
                margin-top: 10px;
            }
            .ex1 .inputbox input {
                max-width: 160px;
                font-size: 1.3rem;
                margin: 0 10px;
            }

            .ex2 {
                background-image: url("aimg/2a.png");
            }
            .ex3 {
                background-image: url("aimg/2b.png");
            }
            .ex2,
            .ex3 {
                background-size: contain;
                background-position: center;
                background-repeat: no-repeat;
                padding: 0 20%;
                min-height: 200px;
            }
            .ex2 .inputbox input,
            .ex3 .inputbox input {
                font-size: 1.6rem;
                padding: 4px 2px;
            }
            .ex2 .inputbox .inp_example,
            .ex3 .inputbox .inp_example {
                background: #fff;
                border-radius: 10px;
                padding: 6px;
                width: 100%;
                text-align: center;
            }
            .ex2 .inputbox .inp_example .numbers,
            .ex3 .inputbox .inp_example .numbers {
                line-height: 1;
                font-size: 1.6rem
            }
            @media (max-width: 992px) {
                .ex2, .ex3{
                    background-size: cover;
                    background-position: right;
                    padding: 4%;
                }
                .ex2 .col,
                .ex3 .col {
                    min-width: 60px;
                }
                .ex2 .inputbox .inp_example .numbers,
                .ex3 .inputbox .inp_example .numbers {
                    font-size: 1.1rem;
                }
                .ex2 .inputbox input,
                .ex3 .inputbox input {
                    font-size: 1.1rem;
                    padding: 2px;
                }
            }

            .playeras {
                position: relative;
            }
            .playeras .inputbox {
                position: absolute;
                left: 0;
                top: 0;
                width: 5.5%;
            }
            .playeras .inputbox input {
                padding: 2px 0;
                font-size: 1rem;
                border-color: #CD7C9E;
            }
            @media (max-width: 768px) {
                .playeras .inputbox input {
                    border-width: 1px;
                    padding: 0;
                }
            }
            .playeras .inputbox:nth-child(1) {
                left: 30.5%;
                top: 25%;
            }
            .playeras .inputbox:nth-child(2) {
                left: 39.2%;
                top: 25%;
            }
            .playeras .inputbox:nth-child(3) {
                left: 49%;
                top: 25%;
            }
            .playeras .inputbox:nth-child(4) {
                left: 58.5%;
                top: 25%;
            }
            .playeras .inputbox:nth-child(5) {
                left: 69.5%;
                top: 25%;
            }
            .playeras .inputbox:nth-child(6) {
                left: 78.5%;
                top: 25%;
            }
            .playeras .inputbox:nth-child(7) {
                left: 14%;
                top: 77%;
            }
            .playeras .inputbox:nth-child(8) {
                left: 22.4%;
                top: 77%;
            }
            .playeras .inputbox:nth-child(9) {
                left: 29.6%;
                top: 77%;
            }
            .playeras .inputbox:nth-child(10) {
                left: 37.7%;
                top: 77%;
            }
            .playeras .inputbox:nth-child(11) {
                left: 46%;
                top: 77%;
            }
            .playeras .inputbox:nth-child(12) {
                left: 55%;
                top: 77%;
            }
            .playeras .inputbox:nth-child(13) {
                left: 62.5%;
                top: 77%;
            }
            .playeras .inputbox:nth-child(14) {
                left: 70.9%;
                top: 77%;
            }
            .selectable .result{
                transform: scale(0.5);
            }


    body
        #app.container.my-5.animate__animated.animate__fadeIn.animate__delay-1s
            h1 #{title}
            if subtitle.length>1
                h2 #{subtitle}

            .instruccion.mt-5 Colorea la cantidad que se indica de izquierda a derecha. Observa el ejemplo.

            .row.mt-3.ex0.justify-content-center
                .col-md-4.col-6.text-center
                    .boxes
                        .selectable(v-for="(i, index) in 10" :class="index==0?'on first':'dis'"): .box(v-for="(i, index) in 10")
                    numbers 10
                .col-md-4.col-6.text-center
                    .boxes
                        selectable(:isok="index<2" v-model="r[index+9]" :ref="refCount()" @isright="right++" v-for="(i, index) in 10"): .box(v-for="(i, index) in 10")
                    numbers 20
                .col-md-4.col-6.text-center
                    .boxes
                        selectable(:isok="index<3" v-model="r[index+18]" :ref="refCount()" @isright="right++" v-for="(i, index) in 10"): .box(v-for="(i, index) in 10")
                    numbers 30
                .col-md-4.col-6.text-center
                    .boxes
                        selectable(:isok="index<4" v-model="r[index+27]" :ref="refCount()" @isright="right++" v-for="(i, index) in 10"): .box(v-for="(i, index) in 10")
                    numbers 40
                .col-md-4.col-6.text-center
                    .boxes
                        selectable(:isok="index<5" v-model="r[index+36]" :ref="refCount()" @isright="right++" v-for="(i, index) in 10"): .box(v-for="(i, index) in 10")
                    numbers 50
            .instruccion.mt-5 Observa las placas anteriores y contesta las siguientes preguntas.
            .row.mt-3.ex1
                .col-12
                    labeltext(num="1.") ¿Cuántos cubos quedaron sin colorear en la primera placa?
                    inputbox(v-model="r[37]" :ref="refCount()" @isright="right++" :answer="90" type="number" placeh="#")
                    labeltext Entonces:
                    inputbox(v-model="r[38]" :ref="refCount()" @isright="right++" :answer="100" type="number" placeh="#")
                        template(v-slot:before=""): numbers 10 + 90 = 
            .row.mt-3.ex1
                .col-12
                    labeltext(num="2.") ¿Cuántos cubos quedaron sin colorear en la segunda placa?
                    inputbox(v-model="r[39]" :ref="refCount()" @isright="right++" :answer="80" type="number" placeh="#")
                    labeltext Entonces:
                    inputbox(v-model="r[40]" :ref="refCount()" @isright="right++" :answer="80" type="number" placeh="#")
                        template(v-slot:before=""): numbers 20 + 
                        template(v-slot:after=""): numbers = 100 
            .row.mt-3.ex1
                .col-12
                    labeltext(num="3.") ¿Cuántos cubos quedaron sin colorear en la primera placa?
                    inputbox(v-model="r[41]" :ref="refCount()" @isright="right++" :answer="70" type="number" placeh="#")
                    labeltext Entonces:
                    inputbox(v-model="r[42]" :ref="refCount()" @isright="right++" :answer="100" type="number" placeh="#")
                        template(v-slot:before=""): numbers 30 + 70 = 
            .row.mt-3.ex1
                .col-12
                    labeltext(num="4.") ¿Cuántos cubos quedaron sin colorear en la primera placa?
                    .row.justify-content-center.align-items-center.text-center.no-gutters
                        .col: inputbox(v-model="r[43]" :ref="refCount()" @isright="right++" :answer="50" type="number" placeh="#")
                        .col-1: numbers +
                        .col: inputbox(v-model="r[44]" :ref="refCount()" @isright="right++" :answer="50" type="number" placeh="#")
                        .col-1: numbers =
                        .col: inputbox(v-model="r[45]" :ref="refCount()" @isright="right++" :answer="100" type="number" placeh="#")
            
            .instruccion.mt-5 Completa la serie de #[strong 10] en #[strong 10] hasta #[strong 100].

            .row.mt-3.ex2.justify-content-center.align-items-center.no-gutters.flex-wrap.wrap
                .col(v-for="(i, index) in tempsobj.a")
                    inputbox(v-model="r[i.model]" :ref="refCount()" @isright="right++" :answer="i.val" type="number" placeh="-" v-if="i.model")
                    inputbox(:answer="i.val" :example="true" v-else="i.model")

            .instruccion.mt-5 Completa la serie de #[strong 20] en #[strong 20] hasta #[strong 100].

            .row.mt-3.ex3.justify-content-center.align-items-center.no-gutters.flex-wrap.wrap
                .col(v-for="(i, index) in tempsobj.b")
                    inputbox(v-model="r[i.model]" :ref="refCount()" @isright="right++" :answer="i.val" type="number" placeh="-" v-if="i.model")
                    inputbox(:answer="i.val" :example="true" v-else="i.model")
            
            .instruccion.mt-5 Completa la serie de 1 en 1.

            .row.mt-3.ex4
                .col-12.playeras
                    img(src="aimg/3a.png").w-100 
                    .inps
                        inputbox(v-for="(i, index) in tempsobj.c" :key="i.model" v-model="r[i.model]" :ref="refCount()" @isright="right++" :answer="i.val" type="number" placeh="#")



            finalize(@evaluate="finalizar" @reset="reset" :resultado="resultado" :right="right" :total="total" fields-text="opciones")
        +scripts
            script.
                app.$set(app.tempsobj, 'a', [
                    { val: 10 },
                    {model: 46, val: 20 },
                    {model: 47, val: 30 },
                    {model: 48, val: 40 },
                    {model: 49, val: 50 },
                    {model: 50, val: 60 },
                    {model: 51, val: 70 },
                    {model: 52, val: 80 },
                    {val: 90 },
                    {model: 53, val: 100 }
                ])

                app.$set(app.tempsobj, 'b', [
                    { val: 20 },
                    { val: 40 },
                    {model: 54, val: 60 },
                    {model: 55, val: 80 },
                    {model: 56, val: 100 },
                ])

                app.$set(app.tempsobj, 'c', [
                    {model: 57, val: 18 },
                    {model: 58, val: 17 },
                    {model: 59, val: 16 },
                    {model: 60, val: 15 },
                    {model: 61, val: 14 },
                    {model: 62, val: 13 },
                    
                    {model: 63, val: 19 },
                    {model: 64, val: 18 },
                    {model: 65, val: 17 },
                    {model: 66, val: 16 },
                    {model: 67, val: 15 },
                    {model: 68, val: 14 },
                    {model: 69, val: 13 },
                    {model: 70, val: 12 },
                ])